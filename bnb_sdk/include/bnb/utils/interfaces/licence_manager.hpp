/// \file
/// \addtogroup Utils
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from utils.djinni

#pragma once

#include <bnb/utils/defs.hpp>
#include <memory>
#include <string>

namespace bnb { namespace interfaces {

/** This class incapsulates information about Client Token.  */
class BNB_EXPORT licence_manager {
public:
    virtual ~licence_manager() {}

    /** Creates *new* `LicenceManager`. This metod won't change Banuba SDK internal state. */
    static std::shared_ptr<licence_manager> create(const std::string & client_token);

    /**
     * Returns the instance used by Banuba SDK to check licence. 
     * This istance was created by `UtilityManager.initialize`.
     */
    static std::shared_ptr<licence_manager> instance();

    /** Checks if Client Token is expired.  */
    virtual bool is_expired() const = 0;

    /** Returns decoded content of Client Token */
    virtual std::string get_json() const = 0;
};

} }  // namespace bnb::interfaces
/// @}

